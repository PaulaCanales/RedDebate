# coding=utf-8
"""
Django settings for reddebate project.

Generated by 'django-admin startproject' using Django 1.10.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
from os.path import join


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'vlf=awhlkhl@b1q7bo92mj^-@dh0fv0zx5mz%qsitx7zfc3s62'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

TEMPLATE_DIRS=(
    join(BASE_DIR, 'templates'),
    )
# Application definition

INSTALLED_APPS = [
    'resumen',
    'debate', #aplicación de "Ver debate"
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'social.apps.django_app.default',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'reddebate.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social.apps.django_app.context_processors.backends',
                'social.apps.django_app.context_processors.login_redirect',

            ],
        },
    },
]

WSGI_APPLICATION = 'reddebate.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'reddebate',
        'USER': 'redusuario',
        'PASSWORD': 'redpass',
        'HOST': '146.83.216.163',
        'PORT': '',
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

APPEND_SLASH=False


AUTHENTICATION_BACKENDS = (
 #'social.backends.facebook.FacebookAppOAuth2',
 'social.backends.facebook.FacebookOAuth2',
 'django.contrib.auth.backends.ModelBackend',
 )

#Facebook inicio de sesión con social-auth
SOCIAL_AUTH_FACEBOOK_KEY = '644604552363752'
SOCIAL_AUTH_FACEBOOK_SECRET = '84c5cbb25d73be84f4f4d050b9877a78'

SOCIAL_AUTH_URL_NAMESPACE = 'social'
SOCIAL_AUTH_LOGIN_REDIRECT_URL =  '/resumen/'
SOCIAL_AUTH_FACEBOOK_SCOPE =['email']
SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {
    'fields': 'id,name,email',
    }
#SOCIAL_AUTH_STRATEGY = 'social.strategies.django_strategy.DjangoStrategy'
#SOCIAL_AUTH_STORAGE = 'social.apps.django_app.default.models.DjangoStorage'


#SOCIAL_AUTH_USER_MODEL = 'auth.User'

#SOCIAL_AUTH_PIPELINE = (
#Obtiene las instancias de social_user y user
#'social.pipeline.social_auth.social_details',
#'social.pipeline.social_auth.social_uid',
#'social.pipeline.social_auth.auth_allowed',
#Recibe según el user.email la instancia del usuario y lo reemplaza con uno que recibió anteriormente
#'social.pipeline.social_auth.social_user',
#'social.pipeline.social_auth.associate_by_email',
#Intenta crear un username válido 
#'social.pipeline.user.get_username',
#Crea un nuevo usuario si todavía no existe
#'social.pipeline.user.create_user',
#Trata de asociar las cuentas
#'social.pipeline.social_auth.associate_user',
#Recibe y actualiza social_user.extra_data
#'social.pipeline.social_auth.load_extra_data',
#Actualiza los campos de la instancia user con la información que obtiene vía backend
#'social.pipeline.user.user_details',
#Función creado por mi que termina de realizar la autenticación
#'apps.reddebate.pipelines.login',
#)


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS= ( os.path.join(BASE_DIR,'static'),
    )
